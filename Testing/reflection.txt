Drew Klein
Professor Craven
Intro to Programming
November 2021

                        Quantitative Reasoning Assignment

1.We learned many methods for using many quantitative functions.
They can even be paired together to expand their functions. Deciding what method
to use was pretty simple, I looked at what I wanted to accomplish and what I had to work
with then decided what function would fit best.

We used lists when we wanted to store
numbers or items. We used "If" statements when we wanted to check a condition. We used loops
such as for loops to run through conditions until either what we want is met or we reach
the end and while loops to run through a given amount of times. We use classes and
functions to help sort and classify our code.

An example of using lists was the
sorting sheet, loops was when we placed dots on the screen in the loopy lab. Classes
and functions were used in almost every lab but especially in the sprites' lab. We
knew we had to use these certain functions because they provided the most efficient
way of completing the task.

2. To communicate the success of my program to another programmer I try to peel back
the layers one by one. This meaning I show them the whole output of the program
then show them how I sorted my code. Then I dive into the different parts and eventually
describe how I used the functions. This shows every part and of my code and breaks it
down in a convenient way.

Variable names and function names matter and should be specific to your code so
when another programmer looks at your code or when you go back and look at it again
It's easy to understand what parts control what. Especially variable names, if you
label them just x and y It's very hard to trace what they mean. Comments break the
code up and help people with less experience understand how the code works. Comments
give you a quick synopsis when looking back.

3.My first goal was to make sure the code actually ran all the way through. If this
didn't happen I would look at the errors it gave me and trace back to those. I also run my
code often so that i can minimize my problems and make it easier to locate the issues.

I struggled to understand how to use the debugging feature but I learned about
at certain points in my code which will run up until that point and this helps
understand what parts of the code is actually working. To determine it the data
I returned was correct I have many options, I could compare to other people or if
it is mathematical I can solve the problem using a different "calculator" and compare.

4.I think the answer to this question is actually pretty simple. Computers, stats,
and scores are all great and provide a lot of important information in sports,
school and solving problems. But computers all deal with numbers. Computers do not
display feelings and take in outside issues. I think about my time a lot in
cross-country and think I always have to run the best time and i look at past
results and think I ran so good that day. But what the stat sheet does not show
is things that happened that day.

This can be compared to computers and code, code has to be made by humans therefore
it is only as good as we are, but we can't impute feelings, emotions, and empathy
like humans have. Numbers display a huge insight but do not tell the whole story.



